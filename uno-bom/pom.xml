<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.12.RELEASE</version>
        <relativePath/>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>cc.allio</groupId>
    <artifactId>uno-bom</artifactId>
    <version>1.1.4.RELEASE</version>
    <packaging>pom</packaging>

    <properties>
        <!-- 统一版本管理 -->
        <uno.version>1.1.4.RELEASE</uno.version>
        <!-- 序列化框架 -->
        <protostuff.version>1.5.9</protostuff.version>
        <!-- google SPI -->
        <auto-service.version>1.0.1</auto-service.version>
        <!-- json对象处理 -->
        <jackson.version>2.11.4</jackson.version>
        <fastjson.version>1.2.78</fastjson.version>
        <!-- 代理相关 -->
        <byte-buddy.version>1.12.2</byte-buddy.version>
        <cglib.version>3.3.0</cglib.version>
        <spring-webflux.version>5.2.15.RELEASE</spring-webflux.version>
        <lombok.version>1.18.22</lombok.version>
        <!-- 单元测试框架 -->
        <junit-jupiter.version>5.6.2</junit-jupiter.version>
        <mockito.version>4.0.0</mockito.version>
        <guava.version>30.1.1-jre</guava.version>
        <!-- swagger -->
        <swagger-v3.version>2.1.11</swagger-v3.version>
        <swagger-v2.version>1.6.2</swagger-v2.version>
        <qlexpress.version>3.2.0</qlexpress.version>
        <mybatis-spring-boot.version>2.2.1</mybatis-spring-boot.version>
        <mybatis-plus-boot.version>3.4.2</mybatis-plus-boot.version>
        <flink.version>1.14.3</flink.version>
        <flink-minlog.version>1.2</flink-minlog.version>
        <!-- 国人reactor后台管理框架 -->
        <hsweb-framework.version>4.0.11</hsweb-framework.version>
        <!-- 数据库 -->
        <druid.version>1.2.5</druid.version>
        <mysql-connector.version>8.0.22</mysql-connector.version>
        <oracle-connector.version>12.2.0.1</oracle-connector.version>
        <postgresql-connector.version>42.2.22</postgresql-connector.version>
        <sqlserver-connector.version>8.4.1.jre8</sqlserver-connector.version>
        <mybatis-plus-dynamic.version>3.3.6</mybatis-plus-dynamic.version>
        <!-- 链路追踪 -->
        <oepntracing.version>0.31.0</oepntracing.version>
        <!-- es -->
        <easy-es.version>0.9.40</easy-es.version>
        <!-- feign -->
        <feign-reactor.version>2.0.15</feign-reactor.version>
        <easyexcel.version>2.2.10</easyexcel.version>
        <springfox-swagger2.version>2.10.5</springfox-swagger2.version>
        <geotools.version>27.0</geotools.version>
        <postgis-jdbc.version>2.5.1</postgis-jdbc.version>
        <aviator.version>5.3.2</aviator.version>
        <easypoi.version>4.4.0</easypoi.version>
        <appache-commons-csv.version>1.8</appache-commons-csv.version>
        <!-- elasticsearch -->
        <elasticsearch-client.version>7.17.7</elasticsearch-client.version>
        <!-- influxdb -->
        <influxdb-client.version>6.7.0</influxdb-client.version>
        <shardingsphere.version>5.3.1</shardingsphere.version>
        <gdal.version>2.4.0</gdal.version>
        <!-- tdengine -->
        <tdengine.version>3.2.4</tdengine.version>

        <easy-rules.version>4.1.0</easy-rules.version>
        <spring-statemachine.version>2.2.0.RELEASE</spring-statemachine.version>
        <jakarta.json-api.version>2.0.1</jakarta.json-api.version>
        <concurrentunit.version>0.4.6</concurrentunit.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- uno工程依赖 -->
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-core</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-auto</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-test</artifactId>
                <version>${uno.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- uno-components -->
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-component-http</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-component-flink</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-component-websocket</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-component-sequential</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-component-kafka</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <!-- uno-starters -->
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-starter-core</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-starter-flink</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-starter-kafka</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-starter-liquibase</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-starter-websocket</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-starter-sequential</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-starter-redis</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <!-- UNO feature -->
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-data</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-web</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-gis</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <dependency>
                <groupId>cc.allio</groupId>
                <artifactId>uno-rule</artifactId>
                <version>${uno.version}</version>
            </dependency>
            <!-- 基本依赖包 -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.statemachine</groupId>
                <artifactId>spring-statemachine-core</artifactId>
                <version>${spring-statemachine.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webflux</artifactId>
                <version>${spring-webflux.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- cglib -->
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>
            <!-- bytebuddy -->
            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy</artifactId>
                <version>${byte-buddy.version}</version>
            </dependency>
            <!-- jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!-- lombok -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <!--  ======================== test framework ======================== -->
            <!-- junit -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- mock -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>net.jodah</groupId>
                <artifactId>concurrentunit</artifactId>
                <version>${concurrentunit.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- auto -->
            <dependency>
                <groupId>com.google.auto.service</groupId>
                <artifactId>auto-service</artifactId>
                <version>${auto-service.version}</version>
            </dependency>
            <!-- protostuff序列化 -->
            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-core</artifactId>
                <version>${protostuff.version}</version>
            </dependency>
            <dependency>
                <groupId>io.protostuff</groupId>
                <artifactId>protostuff-runtime</artifactId>
                <version>${protostuff.version}</version>
            </dependency>
            <!-- swagger -->
            <dependency>
                <groupId>io.swagger.core.v3</groupId>
                <artifactId>swagger-models</artifactId>
                <version>${swagger-v3.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-models</artifactId>
                <version>${swagger-v2.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- 动态脚本引擎解析工 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>QLExpress</artifactId>
                <version>${qlexpress.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-boot.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus-boot.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-java_2.12</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-clients_2.12</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-kafka_2.12</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-jdbc_2.12</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>com.esotericsoftware.minlog</groupId>
                <artifactId>minlog</artifactId>
                <version>${flink-minlog.version}</version>
            </dependency>
            <!-- 数据库 -->
            <!-- Druid -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- MySql -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- PostgreSql -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql-connector.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- SqlServer -->
            <dependency>
                <groupId>com.microsoft.sqlserver</groupId>
                <artifactId>mssql-jdbc</artifactId>
                <version>${sqlserver-connector.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
                <version>${mybatis-plus-dynamic.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.hswebframework.web</groupId>
                <artifactId>hsweb-commons-crud</artifactId>
                <version>${hsweb-framework.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-api</artifactId>
                <version>${oepntracing.version}</version>
            </dependency>
            <dependency>
                <groupId>io.opentracing</groupId>
                <artifactId>opentracing-util</artifactId>
                <version>${oepntracing.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.easy-es</groupId>
                <artifactId>easy-es-boot-starter</artifactId>
                <version>2.0.0-beta1</version>
            </dependency>
            <dependency>
                <groupId>com.playtika.reactivefeign</groupId>
                <artifactId>feign-reactor-cloud</artifactId>
                <version>${feign-reactor.version}</version>
            </dependency>
            <dependency>
                <groupId>com.playtika.reactivefeign</groupId>
                <artifactId>feign-reactor-webclient</artifactId>
                <version>${feign-reactor.version}</version>
            </dependency>
            <dependency>
                <groupId>com.playtika.reactivefeign</groupId>
                <artifactId>feign-reactor-spring-configuration</artifactId>
                <version>${feign-reactor.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>easyexcel</artifactId>
                <version>${easyexcel.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox-swagger2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geotools</groupId>
                <artifactId>gt-geojson</artifactId>
                <version>${geotools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geotools</groupId>
                <artifactId>gt-epsg-extension</artifactId>
                <version>${geotools.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geotools</groupId>
                <artifactId>gt-epsg-wkt</artifactId>
                <version>${geotools.version}</version>
            </dependency>
            <dependency>
                <groupId>net.postgis</groupId>
                <artifactId>postgis-jdbc</artifactId>
                <version>${postgis-jdbc.version}</version>
            </dependency>
            <dependency>
                <groupId>com.googlecode.aviator</groupId>
                <artifactId>aviator</artifactId>
                <version>${aviator.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-annotation</artifactId>
                <version>${easypoi.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-base</artifactId>
                <version>${easypoi.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-web</artifactId>
                <version>${easypoi-version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-csv</artifactId>
                <version>${appache-commons-csv.version}</version>
            </dependency>
            <dependency>
                <groupId>co.elastic.clients</groupId>
                <artifactId>elasticsearch-java</artifactId>
                <version>${elasticsearch-client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elasticsearch-client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client</artifactId>
                <version>${elasticsearch-client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch-client.version}</version>
            </dependency>
            <dependency>
                <groupId>com.influxdb</groupId>
                <artifactId>influxdb-client-java</artifactId>
                <version>${influxdb-client.version}</version>
            </dependency>
            <dependency>
                <groupId>org.gdal</groupId>
                <artifactId>gdal</artifactId>
                <version>${gdal.version}</version>
            </dependency>
            <!-- SQL Parser -->
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>shardingsphere-sql-parser-mysql</artifactId>
                <version>${shardingsphere.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>shardingsphere-sql-parser-postgresql</artifactId>
                <version>${shardingsphere.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>shardingsphere-sql-parser-sqlserver</artifactId>
                <version>${shardingsphere.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shardingsphere</groupId>
                <artifactId>shardingsphere-sql-parser-oracle</artifactId>
                <version>${shardingsphere.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jeasy</groupId>
                <artifactId>easy-rules-core</artifactId>
                <version>${easy-rules.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.json</groupId>
                <artifactId>jakarta.json-api</artifactId>
                <version>${jakarta.json-api.version}</version>
            </dependency>
            <dependency>
                <groupId>com.taosdata.jdbc</groupId>
                <artifactId>taos-jdbcdriver</artifactId>
                <version>${tdengine.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <distributionManagement>
        <repository>
            <id>rdc-releases</id>
            <name>User Project Release</name>
            <url>https://packages.aliyun.com/maven/repository/2300285-release-cAc7WJ/</url>
        </repository>
        <snapshotRepository>
            <id>rdc-snapshots</id>
            <name>User ProjectSNAPSHOTS</name>
            <url>https://packages.aliyun.com/maven/repository/2300285-snapshot-JAW5GT/</url>
        </snapshotRepository>
    </distributionManagement>
</project>